[{"C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\index.js":"1","C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\App.js":"2","C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\pages\\SavedBooks.js":"3","C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\pages\\SearchBooks.js":"4","C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\components\\Navbar.js":"5","C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\components\\SignupForm.js":"6","C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\components\\LoginForm.js":"7","C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\utils\\mutations.js":"8","C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\utils\\queries.js":"9","C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\utils\\API.js":"10","C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\utils\\auth.js":"11","C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\utils\\localStorage.js":"12"},{"size":273,"mtime":1627953837117,"results":"13","hashOfConfig":"14"},{"size":1578,"mtime":1627947456607,"results":"15","hashOfConfig":"14"},{"size":2597,"mtime":1627949344724,"results":"16","hashOfConfig":"14"},{"size":4832,"mtime":1627949346938,"results":"17","hashOfConfig":"14"},{"size":2524,"mtime":1627491622344,"results":"18","hashOfConfig":"14"},{"size":3586,"mtime":1627952729585,"results":"19","hashOfConfig":"14"},{"size":2692,"mtime":1627952722982,"results":"20","hashOfConfig":"14"},{"size":1127,"mtime":1627952918206,"results":"21","hashOfConfig":"14"},{"size":282,"mtime":1627947554875,"results":"22","hashOfConfig":"14"},{"size":1392,"mtime":1627491622348,"results":"23","hashOfConfig":"14"},{"size":1234,"mtime":1627491622348,"results":"24","hashOfConfig":"14"},{"size":793,"mtime":1627491622348,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ekcqdk",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\index.js",[],"C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\App.js",[],["53","54"],"C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\pages\\SavedBooks.js",["55"],"import React from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  CardColumns,\n  Card,\n  Button,\n} from \"react-bootstrap\";\nimport { QUERY_ME } from \"../utils/queries\";\nimport { REMOVE_BOOK } from \"../utils/mutations\";\n// import { getMe, deleteBook } from '../utils/API';\nimport Auth from \"../utils/auth\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { removeBookId } from \"../utils/localStorage\";\n\nconst SavedBooks = () => {\n  const { loading, data } = useQuery(QUERY_ME);\n  const [removeBook] = useMutation(REMOVE_BOOK);\n\n  const userData = data?.me || {};\n\n\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const {data} = await removeBook({\n        variables: {bookId}\n      })\n\n    \n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${\n                userData.savedBooks.length === 1 ? \"book\" : \"books\"\n              }:`\n            : \"You have no saved books!\"}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button\n                    className=\"btn-block btn-danger\"\n                    onClick={() => handleDeleteBook(book.bookId)}\n                  >\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n","C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\pages\\SearchBooks.js",[],"C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\components\\SignupForm.js",["56","57"],"import React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nimport { createUser } from \"../utils/API\";\nimport Auth from \"../utils/auth\";\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await addUser({\n        variables: { ...userFormData },\n      });\n\n      //const { token, user } = await response.json();\n      \n      Auth.login(data.addUser.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your username\"\n            name=\"username\"\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Username is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Your email address\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={\n            !(\n              userFormData.username &&\n              userFormData.email &&\n              userFormData.password\n            )\n          }\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\components\\LoginForm.js",[],"C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\utils\\queries.js",[],"C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\utils\\API.js",[],"C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\utils\\auth.js",[],"C:\\Users\\Migue\\bootcamp\\homework\\BookSearchEngine\\client\\src\\utils\\localStorage.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":33,"column":14,"nodeType":"64","messageId":"65","endLine":33,"endColumn":18},{"ruleId":"62","severity":1,"message":"66","line":6,"column":10,"nodeType":"64","messageId":"65","endLine":6,"endColumn":20},{"ruleId":"62","severity":1,"message":"67","line":20,"column":21,"nodeType":"64","messageId":"65","endLine":20,"endColumn":26},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'createUser' is defined but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]